{
  "name": "unity-toolbox",
  "displayName": "Unity Toolbox",
  "description": "Awesome tools for VSCode & Unity",
  "version": "100.0.3",
  "publisher": "pixl",
  "icon": "./assets/unity-toolbox.png",
  "repository": {
    "type": "git",
    "url": "https://github.com/maxsroka/unity-toolbox.git"
  },
  "categories": [
    "Snippets",
    "Programming Languages"
  ],
  "keywords": [
    "unity",
    "unity3d",
    "c#",
    "csharp",
    "dotnet",
    ".net",
    "gamedev"
  ],
  "engines": {
    "vscode": "^1.81.0"
  },
  "activationEvents": [
    "onLanguage:csharp"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "unityToolbox.insertFileTemplate",
        "title": "Insert File Template",
        "category": "Unity Toolbox"
      },
      {
        "command": "unityToolbox.searchUnity",
        "title": "Search Unity...",
        "category": "Unity Toolbox",
        "enablement": "editorHasSelection == true"
      }
    ],
    "menus": {
      "editor/context": [
        {
          "command": "unityToolbox.searchUnity",
          "when": "editorHasSelection == true",
          "group": "0_UnityToolbox"
        }
      ]
    },
    "configuration": {
      "title": "Unity Toolbox",
      "properties": {
        "unityToolbox.bracketsStyle": {
          "enum": [
            "new line",
            "same line, with space",
            "same line, without space"
          ],
          "default": "new line",
          "description": "Controls the position of the opening curly bracket in snippets."
        },
        "unityToolbox.privateAccessModifier": {
          "type": "boolean",
          "default": false,
          "description": "Controls whether the private access modifier is present in snippets."
        },
        "unityToolbox.fileTemplates.automaticMenu": {
          "type": "boolean",
          "default": true,
          "description": "Controls whether the file templates menu is displayed automatically after opening an empty C# file."
        }
      }
    },
    "snippets": [
      {
        "language": "csharp",
        "path": "./src/features/snippets/snippets.json"
      }
    ],
    "languages": [
      {
        "id": "json",
        "aliases": [
          "Unity Asset (JSON)"
        ],
        "extensions": [
          ".asmdef",
          ".asmref",
          ".index"
        ]
      },
      {
        "id": "yaml",
        "aliases": [
          "Unity Asset (YAML)"
        ],
        "extensions": [
          ".meta",
          ".asset",
          ".unity",
          ".scenetemplate",
          ".prefab",
          ".anim",
          ".controller",
          ".overrideController",
          ".brush",
          ".guiskin",
          ".physicMaterial",
          ".physicsMaterial2D",
          ".signal",
          ".playable",
          ".terrainlayer",
          ".fontsettings",
          ".mask",
          ".lighting",
          ".giparams",
          ".renderTexture",
          ".mixer"
        ]
      },
      {
        "id": "xml",
        "aliases": [
          "UXML"
        ],
        "extensions": [
          ".uxml"
        ]
      },
      {
        "id": "css",
        "aliases": [
          "USS"
        ],
        "extensions": [
          ".uss",
          ".tss"
        ]
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "npm run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "pretest": "npm run compile && npm run lint",
    "lint": "eslint src --ext ts",
    "test": "node ./out/tests/runTests.js"
  },
  "devDependencies": {
    "@types/vscode": "^1.81.0",
    "@types/glob": "^8.1.0",
    "@types/mocha": "^10.0.1",
    "@types/node": "20.2.5",
    "@typescript-eslint/eslint-plugin": "^5.59.8",
    "@typescript-eslint/parser": "^5.59.8",
    "eslint": "^8.41.0",
    "glob": "^8.1.0",
    "mocha": "^10.2.0",
    "typescript": "^5.1.3",
    "@vscode/test-electron": "^2.3.2"
  }
}